swagger: '2.0'
info:
  title: Multi Serverless Service APIs
  version: '1.0'
  description: This gateway connects to various serveless services developed by ECE-EE-Galileo
  contact:
    email: ece.ee.services.galileo@autodesk.com
    name: ECE EE Services Galileo
    url: 'https://wiki.autodesk.com/x/_HGvKQ'
contact:
  name: EFD-Galileo
  email: efd.engineering.services@autodesk.com
paths:
  '/taxValidator/AU/{taxNumber}':
    get:
      responses:
        '200':
          description: Success Response when the information is retrieved successfully from ABN
          headers:
            Access-Control-Allow-Headers:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: boolean
          schema:
            type: object
            properties:
              countryCode:
                type: string
              taxNumber:
                type: number
              status:
                type: string
                enum:
                  - granted
                  - denied
              message:
                type: string
            required:
              - countryCode
              - status
              - taxNumber
              - message
          examples:
            ActiveAbn:
              countryCode: AU
              taxNumber: 74172177893
              status: granted
              message: ''
            CancelledAbn:
              countryCode: AU
              taxNumber: 11283251728
              status: denied
              message: Australian taxNumber is Cancelled
            AbnNotRegistered:
              countryCode: AU
              taxNumber: 12345678910
              status: denied
              message: Search text is not a valid ABN or ACN
        '400':
          description: The error is returned when there is an issue with the arguments of the request.
          schema:
            type: object
            properties:
              code:
                type: number
              message:
                type: string
            required:
              - code
              - message
          examples:
            BadRequest:
              code: 400
              message: Bad Request
        '401':
          description: UnAuthorized to access Tax Validator Service.
          headers:
            Access-Control-Allow-Headers:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: boolean
        '404':
          description: The error is returned when there no data found from ABN Service.
          schema:
            type: object
            properties:
              code:
                type: number
              message:
                type: string
            required:
              - code
              - message
        '500':
          description: The error is returned when there is an issue with the processing of the request.
          schema:
            type: object
            properties:
              code:
                type: number
              message:
                type: string
            required:
              - code
              - message
      security:
        - ForgeJwt: []
      x-amazon-apigateway-integration:
        uri: 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:mss-australian-business-numbers-lookup/invocations'
        requestParameters:
          integration.request.path.taxNumber: method.request.path.taxNumber
          integration.request.querystring.mockDependencies: method.request.querystring.mockDependencies
        responses:
          '200':
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,jwToken,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS,POST'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Credentials: false
          '401':
            statusCode: '401'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,jwToken,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS,POST'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Credentials: false
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
      summary: Validate phone numbers from ABN
      operationId: abn
      produces:
        - application/json
      consumes:
        - application/json
      tags:
        - abn
      parameters:
        - type: string
          name: taxNumber
          in: path
          required: true
          description: ABN Tax Number
        - type: boolean
          name: mockDependencies
          in: query
      x-internal: false
      description: ''
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Access-Control-Allow-Credentials:
              type: string
      security:
        - NONE: []
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,jwToken,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS,POST'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Credentials: false
            responseTemplates:
              application/json: |
                {}
        passthroughBehavior: when_no_match
        httpMethod: OPTIONS
  '/taxValidator/{countryCode}/{taxNumber}':
    get:
      responses:
        '200':
          description: Success Response when the information is retrieved successfully from VIES Vat Service
          headers:
            Access-Control-Allow-Headers:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: boolean
          schema:
            type: object
            properties:
              countryCode:
                type: string
              taxNumber:
                type: string
              status:
                type: string
                enum:
                  - granted
                  - denied
              message:
                type: string
            required:
              - countryCode
              - taxNumber
              - status
              - message
          examples:
            ValidVat:
              countryCode: AT
              taxNumber: U63436026
              status: granted
              message: ''
            InvalidVat:
              countryCode: AT
              taxNumber: U63436020
              status: denied
              message: Invalid Vat Number
        '400':
          description: The error is returned when there is an issue with the arguments of the request.
          schema:
            type: object
            properties:
              code:
                type: number
              message:
                type: string
            required:
              - code
              - message
          examples:
            BadRequest:
              code: 400
              message: Bad Request
        '401':
          description: UnAuthorized to access Tax Validator Service.
          headers:
            Access-Control-Allow-Headers:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: boolean
        '500':
          description: The error is returned when there is an issue with the processing of the request.
          schema:
            type: object
            properties:
              code:
                type: number
              message:
                type: string
            required:
              - code
              - message
      security:
        - ForgeJwt: []
      x-amazon-apigateway-integration:
        uri: 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:mss-vies-vat-validation/invocations'
        requestParameters:
          integration.request.path.countryCode: method.request.path.countryCode
          integration.request.path.taxNumber: method.request.path.taxNumber
          integration.request.querystring.mockDependencies: method.request.querystring.mockDependencies
        responses:
          '200':
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,jwToken,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS,POST'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Credentials: false
          '400':
            statusCode: '401'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,jwToken,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS,POST'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Credentials: false
          '401':
            statusCode: '401'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,jwToken,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS,POST'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Credentials: false
          '500':
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,jwToken,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS,POST'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Credentials: false
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
      summary: VIES Vat Validation
      operationId: vatValidation
      produces:
        - application/json
      consumes:
        - application/json
      description: 'A microservice that should proxy the call to the European Commission VIES VAT Validation service https://ec.europa.eu/taxation_customs/vies/.'
      parameters:
        - in: path
          name: countryCode
          type: string
          required: true
        - in: path
          name: taxNumber
          type: string
          required: true
        - in: header
          name: jwToken
          type: string
        - in: query
          name: mockDependencies
          type: boolean
      tags:
        - VIES
        - Vat Validation
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Access-Control-Allow-Credentials:
              type: string
      security:
        - NONE: []
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,jwToken,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS,POST'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Credentials: false
            responseTemplates:
              application/json: |
                {}
        passthroughBehavior: when_no_match
        httpMethod: OPTIONS
  '/abn-internal/{taxNumber}':
    get:
      responses:
        '200':
          description: Success Response when the information is retrieved successfully from ABN
          schema:
            type: object
            properties:
              taxNumber:
                type: number
              status:
                type: string
                enum:
                  - granted
                  - denied
              message:
                type: string
            required:
              - status
              - taxNumber
              - message
          examples:
            ActiveAbn:
              countryCode: AU
              taxNumber: 74172177893
              status: granted
              message: ''
            CancelledAbn:
              countryCode: AU
              taxNumber: 11283251728
              status: denied
              message: ABN is Cancelled
            AbnNotRegistered:
              countryCode: AU
              taxNumber: 12345678910
              status: denied
              message: Search text is not a valid ABN or ACN
        '400':
          description: The error is returned when there is an issue with the arguments of the request.
          schema:
            type: object
            properties:
              code:
                type: number
              message:
                type: string
            required:
              - code
              - message
          examples:
            BadRequest:
              code: 400
              message: Bad Request
        '401':
          description: UnAuthorized to access ABN Service.
          headers:
            Access-Control-Allow-Headers:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: boolean
        '404':
          description: The error is returned when there no data found from ABN Service.
          schema:
            type: object
            properties:
              code:
                type: number
              message:
                type: string
            required:
              - code
              - message
        '500':
          description: The error is returned when there is an issue with the processing of the request.
          schema:
            type: object
            properties:
              code:
                type: number
              message:
                type: string
            required:
              - code
              - message
      security:
        - CognitoAuthorizer:
            - mss/abn
      x-amazon-apigateway-integration:
        uri: 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:mss-australian-business-numbers-lookup/invocations'
        requestParameters:
          integration.request.path.abn: method.request.path.abn
          integration.request.querystring.mockDependencies: method.request.querystring.mockDependencies
        responses:
          '200':
            statusCode: '200'
          '401':
            statusCode: '401'
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
      summary: Validate phone numbers from ABN
      operationId: abn-internal
      produces:
        - application/json
      consumes:
        - application/json
      tags:
        - abn
      parameters:
        - type: string
          name: abn
          in: path
          required: true
          description: ABN Number
        - type: boolean
          name: mockDependencies
          in: query
  /healthcheck:
    get:
      responses:
        '200':
          description: Success Response when the lambda is called from AWS
          schema:
            type: object
            properties:
              healthy:
                type: boolean
            required:
              - healthy
      x-amazon-apigateway-integration:
        uri: 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:mss-healthcheck/invocations'
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
  /validatePhone:
    get:
      responses:
        '200':
          description: Validate a Phone Number
          headers:
            Access-Control-Allow-Headers:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: boolean
        '401':
          description: UnAuthorized to access ABN Service.
          headers:
            Access-Control-Allow-Headers:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: boolean
      produces:
        - application/json
      parameters:
        - name: verificationType
          in: query
          required: true
          type: string
        - name: phoneNumber
          in: query
          required: true
          type: string
        - name: countryCode
          in: query
          required: true
          type: string
        - name: locale
          in: query
          required: true
          type: string
      security:
        - ForgeJwt: []
      x-amazon-apigateway-integration:
        type: http_proxy
        uri: 'https://${stageVariables.PhoneValidationDomain}/services/adsk/trials/phoneValidate'
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,jwToken,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS,POST'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Credentials: false
        passthroughBehavior: when_no_match
        httpMethod: GET
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Access-Control-Allow-Credentials:
              type: boolean
      security:
        - NONE: []
      consumes:
        - application/json
      produces:
        - application/json
      x-amazon-apigateway-integration:
        type: mock
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,jwToken,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS,POST'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Credentials: false
        requestTemplates:
          application/json: '{"statusCode": 200}'
        passthroughBehavior: when_no_match
  /verifyPhoneCode:
    get:
      responses:
        '200':
          description: Validate the Code sent via SMS
          headers:
            Access-Control-Allow-Headers:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: boolean
        '401':
          description: UnAuthorized to access ABN Service.
          headers:
            Access-Control-Allow-Headers:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: boolean
      produces:
        - application/json
      parameters:
        - name: verificationCode
          in: query
          required: true
          type: string
        - name: phoneNumber
          in: query
          required: true
          type: string
        - name: countryCode
          in: query
          required: true
          type: string
      security:
        - ForgeJwt: []
      x-amazon-apigateway-integration:
        type: http_proxy
        uri: 'https://${stageVariables.PhoneValidationDomain}/services/adsk/trials/phoneVerifyCode'
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,jwToken,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS,POST'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
              method.response.header.Access-Control-Allow-Credentials: false
        passthroughBehavior: when_no_match
        httpMethod: GET
    options:
      consumes:
        - application/json
      produces:
        - application/json
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Access-Control-Allow-Credentials:
              type: boolean
      x-amazon-apigateway-integration:
        type: mock
        responses:
          default:
            statusCode: '200'
        requestTemplates:
          application/json: '{"statusCode": 200}'
        passthroughBehavior: when_no_match
  '/validateVat-internal/{countryCode}/{taxNumber}':
    get:
      responses:
        '200':
          description: Success Response when the information is retrieved successfully from VIES
          schema:
            type: object
            properties:
              countryCode:
                type: string
              taxNumber:
                type: string
              status:
                type: string
              message:
                type: string
            required:
              - countryCode
              - taxNumber
              - status
              - message
          examples:
            ValidVat:
              countryCode: AT
              taxNumber: U63436026
              status: granted
              message: ''
            InvalidVat:
              countryCode: AT
              taxNumber: U63436020
              status: denied
              message: Invalid Vat Number
        '400':
          description: The error is returned when there is an issue with the arguments of the request.
          schema:
            type: object
            properties:
              code:
                type: number
              message:
                type: string
            required:
              - code
              - message
          examples:
            BadRequest:
              code: 400
              message: Bad Request
        '401':
          description: UnAuthorized to access VIES Service.
          headers:
            Access-Control-Allow-Headers:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: boolean
        '500':
          description: The error is returned when there is an issue with the processing of the request.
          schema:
            type: object
            properties:
              code:
                type: number
              message:
                type: string
            required:
              - code
              - message
      security:
        - CognitoAuthorizer:
            - mss/validateVat
      x-amazon-apigateway-integration:
        uri: 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:mss-vies-vat-validation/invocations'
        requestParameters:
          integration.request.path.countryCode: method.request.path.countryCode
          integration.request.path.taxNumber: method.request.path.taxNumber
          integration.request.querystring.mockDependencies: method.request.querystring.mockDependencies
        responses:
          '200':
            statusCode: '200'
          '400':
            statusCode: '400'
          '401':
            statusCode: '401'
          '500':
            statusCode: '500'
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
      summary: VIES Vat Validation
      operationId: vatValidation-internal
      produces:
        - application/json
      consumes:
        - application/json
      tags:
        - VIES
        - Vat Validation
      parameters:
        - in: path
          name: countryCode
          type: string
          required: true
        - in: path
          name: taxNumber
          type: string
          required: true
        - in: query
          name: mockDependencies
          type: boolean
  '/csn/SelfService/{subscriptionType}/{country}':
    get:
      summary: Get Customer Specific Number API for Self Service
      tags:
        - CSN Self Service
        - Self Service
      responses:
        '200':
          description: 'Successful request based on the provided parameters, returning the CSN to be provided to SAP'
          schema:
            type: object
            properties:
              CSN:
                type: string
                minLength: 1
                description: Returns a 10 digit Customer Specific Number if there is a successfull match
            required:
              - CSN
          examples:
            Success:
              CSN: '5131709276'
        '400':
          description: Invalid request due to missing parameters
          schema:
            type: object
            properties:
              code:
                type: number
              errors:
                type: array
                items:
                  type: string
            required:
              - code
              - errors
          examples:
            Bad Request:
              code: 400
              errors:
                - 'path param subscriptionType is missing or is not part of the two possible ones: NewSeats or eRenewals.'
        '404':
          description: No CSN is applicable for the provided set of parameters
          schema:
            type: object
            properties:
              code:
                type: number
              errors:
                type: array
                items:
                  type: string
            required:
              - code
              - errors
          examples:
            example-1:
              code: 404
              errors:
                - No Customer Specific Number (CSN) matches the given criteria.
        '500':
          description: Internal Server Error
          schema:
            type: object
            properties:
              code:
                type: number
              errors:
                type: array
                items:
                  type: string
            required:
              - code
              - errors
          examples:
            Internal Server Error:
              code: 500
              errors:
                - Internal Server Error. Please try again later.
        '503':
          description: Service unavailable if the mapping file is unavailable or the service is disabled or due to other reasons
          schema:
            type: object
            properties:
              code:
                type: number
              errors:
                type: array
                items:
                  type: string
            required:
              - code
              - errors
          examples:
            Service Unavailable:
              code: 503
              errors:
                - The Customer Specific Number (CSN) data service is not available! Please contact the support or try later.
      x-amazon-apigateway-integration:
        uri: 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:mss-get-csn/invocations'
        requestParameters:
          integration.request.path.subscriptionType: method.request.path.subscriptionType
          integration.request.path.country: method.request.path.country
        responses:
          '200':
            statusCode: '200'
          '400':
            statusCode: '400'
          '404':
            statusCode: '404'
          '500':
            statusCode: '500'
          '503':
            statusCode: '503'
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
      operationId: CSN-SelfService
      description: 'Get CSN based on the required parameters, such as country, type of subscription and presence of Line of Credit when the source of transaction is Self Service'
      parameters:
        - type: string
          name: subscriptionType
          in: path
          required: true
          description: '"subscriptionType" describes whether it is "NewSeats" or "eRenewals"'
          pattern: NewSeats|eRenewals
        - type: string
          name: country
          in: path
          required: true
          description: '"country" is a 2-character parameter which follows "ISO 3166-1 alpha-2" '
          minLength: 2
          maxLength: 2
          pattern: '[A-Z]{2}'
  '/csn/InsideSales/{subscriptionType}/{lineOfCreditPresence}/{country}':
    get:
      summary: Get Customer Specific Number API for Inside Sales
      tags:
        - CSN Inside Sales
        - Inside Sales
      responses:
        '200':
          description: 'Successful request based on the provided parameters, returning the CSN to be provided to SAP'
          schema:
            type: object
            properties:
              CSN:
                type: string
                minLength: 1
                description: Returns a 10 digit Customer Specific Number if there is a successfull match
            required:
              - CSN
          examples:
            Success:
              CSN: '5131709276'
        '400':
          description: Invalid request due to missing parameters
          schema:
            type: object
            properties:
              code:
                type: number
              errors:
                type: array
                items:
                  type: string
            required:
              - code
              - errors
          examples:
            Bad Request:
              code: 400
              errors:
                - 'path param subscriptionType is missing or is not part of the two possible ones: NewSeats or eRenewals.'
        '404':
          description: No CSN is applicable for the provided set of parameters
          schema:
            type: object
            properties:
              code:
                type: number
              errors:
                type: array
                items:
                  type: string
            required:
              - code
              - errors
          examples:
            Not Found:
              code: 404
              errors:
                - No Customer Specific Number (CSN) matches the given criteria.
        '500':
          description: Internal Server Error
          schema:
            type: object
            properties:
              code:
                type: number
              errors:
                type: array
                items:
                  type: string
            required:
              - code
              - errors
          examples:
            ServerError:
              code: 500
              errors:
                - Internal Server Error. Please try again later.
        '503':
          description: Service unavailable if the mapping file is unavailable or the service is disabled or due to other reasons
          schema:
            type: object
            properties:
              code:
                type: number
              errors:
                type: array
                items:
                  type: string
            required:
              - code
              - errors
          examples:
            Service Unavailable:
              code: 503
              errors:
                - The Customer Specific Number (CSN) data service is not available! Please contact the support or try later.
      x-amazon-apigateway-integration:
        uri: 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:mss-get-csn/invocations'
        requestParameters:
          integration.request.path.subscriptionType: method.request.path.subscriptionType
          integration.request.path.lineOfCreditPresence: method.request.path.lineOfCreditPresence
          integration.request.path.country: method.request.path.country
        responses:
          '200':
            statusCode: '200'
          '400':
            statusCode: '400'
          '404':
            statusCode: '404'
          '500':
            statusCode: '500'
          '503':
            statusCode: '503'
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
      operationId: CSN-InsideSales
      description: 'Get CSN based on the required parameters, such as country, type of subscription and presence of Line of Credit when the source of transaction is Inside Sales'
      parameters:
        - type: string
          name: subscriptionType
          in: path
          required: true
          description: '"subscriptionType" describes whether it is "NewSeats" or "eRenewals"'
          pattern: NewSeats|eRenewals
        - type: string
          name: lineOfCreditPresence
          in: path
          description: '"lineOfCreditPresence" describes the presence of Line of Credits in the payment methods'
          required: true
          pattern: WithLineOfCredit|WithoutLineOfCredit
        - type: string
          name: country
          in: path
          required: true
          minLength: 2
          maxLength: 2
          description: '"country" is a 2-character parameter which follows "ISO 3166-1 alpha-2"'
          pattern: '[A-Z]{2}'
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
tags:
  - name: taxValidator
  - name: healthcheck
  - name: csn
x-amazon-apigateway-request-validators:
  Validate body:
    validateRequestParameters: false
    validateRequestBody: true
x-amazon-apigateway-gateway-responses:
  UNAUTHORIZED:
    statusCode: 401
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Headers: '''Content-Type,jwToken,Authorization,X-Api-Key'''
      gatewayresponse.header.Access-Control-Allow-Methods: '''GET,OPTIONS,POST'''
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
    responseTemplates:
      application/json: |-
        {
           "message": $context.error.messageString,
           "statusCode": "'401'"
        }
securityDefinitions:
  ForgeJwt:
    type: apiKey
    name: jwToken
    in: header
    x-amazon-apigateway-authtype: custom
    x-amazon-apigateway-authorizer:
      authorizerUri: 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:mss-validate-forge-jwt/invocations'
      authorizerResultTtlInSeconds: 0
      type: token
  CognitoAuthorizer:
    type: apiKey
    name: Authorization
    in: header
    x-amazon-apigateway-authtype: COGNITO_USER_POOLS
    x-amazon-apigateway-authorizer:
      providerARNs:
        - 'Fn::Sub': '${CognitoUserPool.Arn}'
      type: COGNITO_USER_POOLS
host: web-engineering-svc.autodesk.com
